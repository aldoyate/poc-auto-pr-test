name: Auto PR de ms-documents-bs a ms-documents-bs-final

on:
  pull_request:
    branches:
      - ms-documents-bs-final
    types:
      - opened
      - synchronize
  workflow_dispatch:

concurrency:
  group: auto-merge-bot-${{ github.event.pull_request.number }}
  cancel-in-progress: false

jobs:
  auto-merge-bot:
    if: github.event.pull_request.user.login == 'bot-aldo'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Log - PR desde el bot
        run: 'echo "El PR fue creado por el bot: ${{ github.event.pull_request.user.login }}"'

      - name: Verificar si hay cambios reales
        id: check_changes
        run: |
          git fetch origin ms-documents-bs ms-documents-bs-final
          echo "Comparando origin/ms-documents-bs con origin/ms-documents-bs-final..."
          if git diff --quiet origin/ms-documents-bs-final origin/ms-documents-bs; then
            echo "CAMBIOS=false" >> $GITHUB_ENV
          else
            echo "CAMBIOS=true" >> $GITHUB_ENV
          fi

      - name: Intentar fusionar el PR automáticamente
        if: env.CAMBIOS == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          script: |
            const prNumber = context.payload.pull_request.number;
            console.log(`Verificando PR #${prNumber} creado por el bot...`);

            let retries = 10;
            let merged = false;

            while (retries > 0 && !merged) {
              const { data: pr } = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber
              });

              console.log(`Intento ${11 - retries} | mergeable=${pr.mergeable}, state=${pr.mergeable_state}`);

              if (pr.mergeable && pr.mergeable_state === 'clean') {
                console.log(`PR #${prNumber} está listo para merge. Ejecutando fusión...`);
                await github.rest.pulls.merge({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: prNumber,
                  merge_method: 'squash'
                });
                console.log(`PR #${prNumber} fusionado exitosamente.`);
                merged = true;
              } else if (pr.mergeable_state === 'unstable') {
                console.log('PR aún en estado inestable. Esperando 5 segundos antes de reintentar...');
                await new Promise(resolve => setTimeout(resolve, 5000));
                retries--;
              } else {
                console.log(`PR #${prNumber} no es mergeable. Estado: ${pr.mergeable_state}. Se omite la fusión.`);
                break;
              }
            }

            if (!merged) {
              console.log('No se pudo realizar el merge automático tras varios intentos.');
            }

      - name: Log - Proceso completado
        run: echo "Workflow completado exitosamente."
